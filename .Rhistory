p_x = c_x + rnorm(1)
alpha = norm(p_x)/norm(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
hist(x)
norm =function(x){dgamma(x)
}
norm(2)
dgamma(x)
norm =function(x){dgamma(x, 2)
}
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(0.2)
norm(0.2)
norm(0.2)
norm(0.2)
norm(0.2)
norm(0.2)
norm(0.2)
norm(0.2)
rgamma(1, 2)
rgamma(1, 2)
rgamma(1, 2)
rgamma(1, 2)
rgamma(1, 2)
rgamma(1, 2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
rgamma(1, 0.2)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm =function(x){rgamma(x, 2)
}
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm(1)
norm =function(x){dgamma(x, 2)
}
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
norm(2)
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = norm(p_x)/norm(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
hist(x)
hist(x, probability = T)
XX = seq(0, 10, 0,01)
XX = seq(0, 10, 0,01)
hist(x, probability = T)
lines(xx, norm(xx))
hist(x, ylim = c(0, 0.4), probability = T)
lines(xx, norm(xx))
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = norm(p_x)/norm(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T)
lines(xx, norm(xx))
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = norm(p_x)/norm(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T)
lines(xx, norm(xx))
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = norm(p_x)/norm(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T)
lines(xx, norm(xx))
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = norm(p_x)/norm(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T)
lines(xx, norm(xx))
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = norm(p_x)/norm(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T)
lines(xx, norm(xx))
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'blue')
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, norm(xx))
gammaf =function(x){dgamma(x, 2)
}
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, gammaf(xx))
gammaf =function(x){dgamma(x, 2)
}
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, gammaf(xx))
gammaf =function(x){dgamma(x, 2)
}
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, gammaf(xx))
gammaf =function(x){dgamma(x, 2)
}
x = rep(0, 10000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, gammaf(xx))
gammaf =function(x){dgamma(x, 2)
}
x = rep(0, 100000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, gammaf(xx))
gammaf =function(x){dgamma(x, 2)
}
x = rep(0, 100000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, gammaf(xx))
gammaf =function(x){dgamma(x, 2)
}
x = rep(0, 100000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 30, col = 'lightblue')
lines(xx, gammaf(xx))
x = rep(0, 100000)
x[1] =0.2
for(i in 2:length(x)){
c_x = x[i-1]
p_x = c_x + rnorm(1)
alpha = gammaf(p_x)/gammaf(c_x)
if(runif(1) < alpha){
x[i] = p_x
}else{
x[i] = c_x
}
}
XX = seq(0, 10, 0,01)
hist(x, ylim = c(0, 0.4), probability = T, breaks = 50, col = 'lightblue')
lines(xx, gammaf(xx))
fx = function(x){
x^2 + 2*x + 1
}
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
x = rnorm(1)
x = rnorm(1)
x = rnorm(1)
fx = function(x){
x^2 + 2*x + 1
}
fx(x)
fx(x)
fx(x)
fx(x)
fx = function(x){
x^2 + 2*x + 1
}
a = 0
b = 3
n = 100000
integrate=  function(){
for(i in 1:n){
x = rnorm(1)
sum = sum + fx(x)
}
return((a-b)/n *sum)
}
integrate()
a = 0
b = 3
n = 100000
sum = 0
integrate=  function(){
for(i in 1:n){
x = rnorm(1)
sum = sum + fx(x)
}
return((a-b)/n *sum)
}
integrate()
integrate()
a = 0
b = 3
n = 100000
sum = 0
integrate=  function(){
for(i in 1:n){
x = rnorm(1)
sum = abs(sum + fx(x))
}
return((a-b)/n *sum)
}
integrate()
a = 0
b = 3
n = 100000
sum = 0
integrate=  function(){
for(i in 1:n){
x = rnorm(1)
sum = sum + fx(x)
}
return((b-a)/n *sum)
}
integrate()
integrate()
fx(2)
fx(4)
a = 0
b = 3
n = 100000
sum = 0
integrate=  function(){
for(i in 1:n){
sum = sum + fx(rnorm(1))
}
return((b-a)/n *sum)
}
integrate()
integrate=  function(){
for(i in 1:n){
sum = sum + fx(rnorm(1))
print(sum)
}
return((b-a)/n *sum)
}
integrate()
a = 0
b = 3
n = 1000000
sum = 0
integrate=  function(){
for(i in 1:n){
sum = sum + fx(rnorm(1))
print(sum)
}
return((b-a)/n *sum)
}
integrate()
a = 0
b = 3
n = 10000
sum = 0
integrate=  function(){
for(i in 1:n){
sum = sum + fx(runif(1, min = 0, max=3))
print(sum)
}
return((b-a)/n *sum)
}
integrate()
integrate()
integrate()
integrate=  function(){
for(i in 1:n){
sum = sum + fx(runif(1, min = 0, max=3))
}
return((b-a)/n *sum)
}
integrate()
fx
View(fx)
View(fx)
cat('A solução da integral no intervalo:',(a, b), 'é', I)
cat('A solução da integral no intervalo:', (a, b), 'é', I)
cat('A solução da integral no intervalo:' I)
cat('A solução da integral no intervalo:', I)
I = ((b-a)/n *sum)
cat('A solução da integral no intervalo:', I)
cat('A solução da integral no intervalo:', a I)
a = 0
b = 3
n = 10000
sum = 0
integrate=  function(){
for(i in 1:n){
sum = sum + fx(runif(1, min = 0, max=3))
}
I = ((b-a)/n *sum)
cat('A solução da integral definida é:', I)
}
integrate()
integrate()
integrate()
integrate()
integrate()
integrate()
integrate()
integrate()
integrate()
integrate=  function(n){
for(i in 1:n){
sum = sum + fx(runif(1, min = 0, max=3))
}
I = ((b-a)/n *sum)
cat('A solução da integral definida é:', I)
}
integrate(10000)
integrate(100000)
integrate(1000000)
integrate(1000000)
integrate(1000000)
y = fx(seq(0, 3, length=100))
c = seq(0, 3, length=100)
y = fx(c)
plot(c, y)
plot(y, c)
plot(y, c, type='l')
plot(c, y, type='l')
polygon(0, 3)
plot(c, y, type='l')
polygon(0, 3)
plot(c, y, type='l')
polygon(rbind(cbind(rev(c),0),
cbind(c,y)),col=‘gray’)
polygon(cbind(c,y)),col=‘gray’)
polygon(cbind(c,y)),col=‘gray’))
15/20
15/20*78

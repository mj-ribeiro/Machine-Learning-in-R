rbinom(100)
rbinom(100, 100)
rbinom(100, 100, prob=0.05)
rbinom(100, 100, prob=1)
rbinom(100, 1, prob=1)
rbinom(100, 1, prob=0.1)
rbinom(100, 1, prob=0.51)
install.packages('gt')
library(gt)
exibble
exibble %>%
exibble %>% gt()
exibble %>% gt()
y = rnorm(1000, 10, 22)
x = rnorm(1000, 0, 1)
reg = lm(y~x)
reg %>% gt()
library(GetBCBData)
pib = gbcbd_get_series(1208, first.date= '2000-01-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
View(pib)
plot(pib)
plot(pib, type='l')
View(pib)
plot(pib$value, pib$ref.date, type='l')
plot(pib$ref.date, pib$value,  type='l')
plot(pib$ref.date, pib$value,  type='l', asp = 1/2)
plot(pib$ref.date, pib$value,  type='l', asp = 1/0.8)
plot(pib$ref.date, pib$value,  type='l', asp = 1)
plot(pib$ref.date, pib$value,  type='l')
plot(pib$ref.date, pib$value,  type='l', asp = 0.8)
plot(pib$ref.date, pib$value,  type='l', asp = 0.9)
plot(pib$ref.date, pib$value,  type='l', asp = 0.01)
plot(pib$ref.date, pib$value,  type='l', asp = 0.001)
plot(pib$ref.date, pib$value,  type='l', asp = 10)
plot(pib$ref.date, pib$value,  type='l', asp = 100)
plot(pib$ref.date, pib$value,  type='l', asp = 1)
plot(pib$ref.date, pib$value,  type='l', asp = 2)
plot(pib$ref.date, pib$value,  type='l', asp = 0.2)
plot(pib$ref.date, pib$value,  type='l', asp = 0.2)
plot(pib$ref.date, pib$value,  type='l', asp = 0.2)
plot(pib$ref.date, pib$value,  type='l', asp = 0.2)
plot(pib$ref.date, pib$value,  type='l')
plot(pib$ref.date, pib$value,  type='l')
plot(pib$ref.date, pib$value,  type='l', xaxt="n")
axis(1, at = seq(2000, 2020, by = 1), las=2)
plot(pib$ref.date, pib$value,  type='l', xaxt="n")
axis(1, at = seq(2000, 2020, by = 1), las=2)
seq(2000, 2020, by = 1)
plot(pib$ref.date, pib$value,  type='l', xaxt="n")
plot(pib$ref.date, pib$value,  type='l', xaxt="n")
plot(pib$ref.date, pib$value,  type='l')
axis(1, at = seq(2000, 2020, by = 1), las=2)
plot(pib$ref.date, pib$value,  type='l')
axis(1, at = seq(2000, 2020, by = 1), las=2)
plot(pib$ref.date, pib$value,  type='l', xaxt="n")
axis(1, at = seq(2000, 2020, by = 1), labels = T)
plot(pib$ref.date, pib$value,  xaxt="n")
plot( pib$value,  type='l', xaxt="n")
plot( pib$value,  type='l', xaxt="n")
axis(1, at = seq(2000, 2020, by = 1), labels = T)
seq(2000, 2020, by = 1)
axis(1, at = seq(2000, 2020, by = 1), labels = T)
axis(2, at = seq(2000, 2020, by = 1), labels = T)
axis(4, at = seq(2000, 2020, by = 1), labels = T)
plot(pib, xaxt="n")
axis(1, xaxp=c(2000, 2020, 19), las=2)
plot(pib, xaxt="n")
axis(1, xaxp=c(2000, 2020, 19), las=2, labels = T)
plot( pib$value,  type='l', xaxt="10")
plot( pib$value,  type='l', xaxt="k")
plot( pib$value,  type='l', xaxt="n")
plot(pib, xaxt="n")
axis(1, xaxp=seq(2000, 2020, by = 1), las=2)
axis(1, xaxp=seq(2000, 2019, by = 1), las=2)
plot(pib, xaxt="n")
axis(1, xaxp=seq(2001, 2019, by = 1), las=2)
View(pib)
plot(pib, xaxt="n")
axis(1, xaxp=seq(2000, 2019, by = 1), las=2)
plot(pib, xaxt="n")
axis(1, xaxp=seq(2000, 2019, by = 1))
plot(pib, xaxt="n")
axis(1, xaxp=c(2000, 2019, 1))
plot(y, xaxt="n")
axis(1, xaxp=c(2000, 3000, 1))
plot(y, xaxt="n")
axis(1, xaxp=c(2000, 3000, 1), las=2)
plot(y, xaxt="n")
axis(1, at=1:20, xaxp=c(2000, 3000, 1), las=2)
plot( pib$value,  type='l', xaxt="n")
axis(1, at=1:20, labels = seq(2000, 2019, 1))
plot( pib,  type='l', xaxt="n")
axis(1, at=1:20, labels = seq(2000, 2019, 1))
plot( pib,  type='l', xaxt="n")
axis(1, at=1:20, labels = seq(2000, 2019, 1))
plot( pib$value,  type='l', xaxt="n")
axis(1, at=1:20, labels = seq(2000, 2019, 1))
pib = gbcbd_get_series(7326, first.date= '2000-01-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
plot( pib$value,  type='l', xaxt="n")
axis(1, at=1:20, labels = seq(2000, 2019, 1))
plot( pib$value,  type='l', xaxt="n", ylab = 'Tx de crescimento do PIB', xlab = 'Ano')
axis(1, at=1:20, labels = seq(2000, 2019, 1))
windows()
plot( pib$value,  type='l', xaxt="n", ylab = 'Tx de crescimento do PIB', xlab = 'Ano')
axis(1, at=1:20, labels = seq(2000, 2019, 1))
windows()
plot( pib$value,  type='l', xaxt="n", ylab = 'Tx de crescimento do PIB', xlab = 'Ano')
axis(1, at=1:20, labels = seq(2000, 2019, 1))
abline(h = 0 )
dnorm(0,5, 1,0)
dnorm(0.5,5, 1,0)
pnorm(0.5,5, 1,0)
qnorm(0.5,5, 1,0)
qnorm(0.5, 1,0)
qnorm(2, 1,0)
qnorm(0, 1,0)
dnorm(0, 1,0)
pnorm(0, 1,0)
e
norm = function(x, m, s){
return(1/sqrt((2*pi*s))* exp(-((x - m)^2/(2*s^2))))
}
norm = function(x, m=0, s=1){
return(1/sqrt((2*pi*s))* exp(-((x - m)^2/(2*s^2))))
}
norm(0)
dnorm(0, 1,0)
dnorm(0, 0,1)
pnorm(0, 0, 1)
library(quantmod)
ibov = getSymbols('^BVSP', src='yahoo',
from= '2000-01-01',
periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
hist(pib)
View(pib)
hist(pib$value)
hist(pib$value, breaks = 35)
hist(pib$value, breaks = 35, probability = T)
ret = diff(log(ibov))
ret = ret[is.na(ret)==F]
hist(ret, breaks = 35, probability = T)
hist(ret, breaks = 45, probability = T)
mret = mean(ret)
vret = sd(ret)
rnorm(length(ret), mret, vret)
est_p = rnorm(length(ret), mret, vret)
hist(est_p)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = dnorm(length(ret), mret, vret)
est_p = qnorm(length(ret), mret, vret)
est_p = pnorm(length(ret), mret, vret)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
est_p = rnorm(length(ret), mret, vret)
hist(est_p, breaks = 45, probability = T)
for (i in 1:length(ret)){
ret_n[i] = norm(ret[i], m=mret, s=vret)
}
ret_n = c()
for (i in 1:length(ret)){
ret_n[i] = norm(ret[i], m=mret, s=vret)
}
hist(ret_n)
hist(ret_n, breaks = 35)
hist(ret_n, breaks = 35, probability  = T)
dnorm(ret, mret, vret)
hist(dnorm(ret, mret, vret))
hist(dnorm(ret, 0, 1))
hist(rnorm(length(ret), mret, vret))
hist(rnorm(length(ret), mret, vret))
hist(rnorm(length(ret), mret, vret))
hist(rnorm(length(ret), mret, vret))
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'blue')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightblue')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(rnorm(length(ret), mret, vret), breaks = 35, col = 'lightgreen')
hist(ret_n, breaks = 35, probability = T)
hist(ret_n, ret, breaks = 35, probability = T)
hist(ret_n, ret, breaks = 35)
plot(ret_n, ret, breaks = 35)
plot(ret, ret_n, breaks = 35, type = 'l', col = 'red')
plot(ret_n, ret, breaks = 35, type = 'l', col = 'red')
plot(as.vector(ret), ret_n, breaks = 35, type = 'l', col = 'red')
plot(as.vector(ret), ret_n, breaks = 35, col = 'red')
hist(rnorm(length(ret)), 0, 1)
hist(rnorm(length(ret)), 0, 1))
hist(rnorm(length(ret), 0, 1)
hist(rnorm(length(ret), 0, 1))
hist(rnorm(length(ret), 0, 1) )
hist(rnorm(length(ret), 0, 1) )
lines(as.vector(ret), ret_n, breaks = 35, col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(as.vector(ret), ret_n, breaks = 35, col = 'red')
hist(as.vector(ret), ret_n, breaks = 35, col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(as.vector(ret), ret_n, col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(ret_n, as.vector(ret), col = 'red')
plot(as.vector(ret), ret_n, breaks = 35, col = 'red')
plot(as.vector(ret), ret_n, col = 'red')
warnings()
plot(as.vector(ret), ret_n, col = 'red')
plot(as.vector(ret), ret_n, col = 'red', type = 'l')
plot(as.vector(ret), ret_n, col = 'red', type = 'c')
plot(as.vector(ret), ret_n, col = 'red', type = 'b')
plot(as.vector(ret), ret_n, col = 'red', type = 'h')
plot(as.vector(ret), ret_n, col = 'red', type = 'o')
plot(as.vector(ret), ret_n, col = 'red', type = 't')
plot(as.vector(ret), ret_n, col = 'red', type = 'z')
plot(as.vector(ret), ret_n, col = 'red', type = 'q')
plot(as.vector(ret), ret_n, col = 'red', type = 'h')
plot(as.vector(ret), ret_n, col = 'red', type = 'h')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
line(ret_n, as.vector(ret), col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
line(ret_n, as.vector(ret), col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
line(v=(ret_n, as.vector(ret)), col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
line(v=(ret_n, as.vector(ret)), col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
line(ret_n, col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
line(ret_n, col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(ret_n, col = 'red')
plot(as.vector(ret), ret_n, col = 'red', type = 'h')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
plot(as.vector(ret), ret_n, col = 'red', type = 'l')
plot(as.vector(ret), ret_n, col = 'red', type = 's')
plot(as.vector(ret), ret_n, col = 'red', type = 'q')
plot(as.vector(ret), ret_n, col = 'red')
line(as.vector(ret), ret_n, col = 'red')
lines(as.vector(ret), ret_n, col = 'red')
lines.default(as.vector(ret), ret_n, col = 'red')
plot(as.vector(ret), ret_n, col = 'red')
plot(as.vector(ret), ret_n, col = 'blue')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(ret_n, col = 'red')
plot(as.vector(ret), ret_n, col = 'blue')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(h =ret_n, col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(v =ret_n, col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(ret_n, col = 'red')
max(ret_n)
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(norm(ret), col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(norm(as.vector(ret)), col = 'red')
as.vector(ret)
norm(as.vector(ret))
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
lines(norm(as.vector(ret), mret, vret), col = 'red')
plot(norm(as.vector(ret), mret, vret), col = 'red')
plot(ret, norm(as.vector(ret), mret, vret), col = 'red')
plot(as.vector(ret), norm(as.vector(ret), mret, vret), col = 'red')
hist(rnorm(length(ret), 0, 1), probability = T, breaks = 35 )
hist(rnorm(length(ret), mret, vret), probability = T, breaks = 35 )
hist(rnorm(length(ret), mret, vret), probability = T, breaks = 35 )
lines(as.vector(ret), norm(as.vector(ret), mret, vret), col = 'red')
hist(rnorm(length(ret), mret, vret), probability = T, breaks = 35 )
line(as.vector(ret), norm(as.vector(ret), mret, vret), col = 'red')
plot(as.vector(ret), ret_n, col = 'blue')
hist(rnorm(length(ret), mret, vret), probability = T, breaks = 35 )
plot(as.vector(ret), ret_n, col = 'blue')
plot(as.vector(ret), ret_n, col = 'blue')
xx = seq(0.4, 0.4, 0.01)
norm(xx, 0, 1)
xx = seq(-0.4, 0.4, 0.01)
norm(xx, 0, 1)
plot(as.vector(ret), ret_n, col = 'blue')
lines(norm(xx, 0, 1))
plot(as.vector(ret), ret_n, col = 'blue')
lines(norm(xx, 0, 1), col='black')
hist(as.vector(ret), ret_n, col = 'blue')
hist(as.vector(ret), ret_n, col = 'blue', breaks=35)
hist(as.vector(ret), probability=ret_n, col = 'blue', breaks=35)
hist(as.vector(ret), density =ret_n, col = 'blue', breaks=35)
hist(as.vector(ret), density =ret_n, col = 'blue', breaks=35, probability = T)
hist(as.vector(ret), density =ret_n, col = 'blue', breaks=35, probability = T)
lines(norm(xx, 0, 1), col='black')
hist(norm(xx, 0, 1))
hist(ret)
hist(ret, breaks = 35, probability = T)
hist(ret, breaks = 35, probability = T, col = blue )
hist(ret, breaks = 35, probability = T, col = 'blue' )
hist(ret, breaks = 35,
probability = T,
col = 'blue',
ylim = c(-0.4,0.3))
hist(ret, breaks = 35,
probability = T,
col = 'blue',
xlim = c(-0.4,0.3))
hist(ret, breaks = 35,
probability = T,
col = 'blue',
xlim = c(-0.4,0.3))
lines(xx, norm(xx), col='red')
plot(xx, norm(xx), col='red')
plot( norm(xx), xx, col='red')
plot(xx, norm(xx), col='red')
hist(ret, breaks = 35,
probability = T,
col = 'blue',
xlim = c(-0.4,0.3))
plot(xx, norm(xx), col='red')
plot(as.vector(ret), norm(as.vector(ret)), col='red')
hist(ret, breaks = 35,
probability = T,
col = 'blue',
xlim = c(-0.4,0.3))
plot(ret, ret_n)
plot(as.vector(ret), ret_n)
plot(as.vector(ret), ret_n, col='blue')
plot(as.vector(ret), ret_n, col='yellow')
plot(as.vector(ret), ret_n, col='blue')
library(fitdistrplus)
fitdist(ret)
descdist(ret)
ret = as.vector(ret)
descdist(ret)
k = kurtosis(ret)
library(moments)
k = kurtosi(ret)
k = kurtosis(ret)
k
skewness(ret)
skewness(ret)^2
fitdist(ret, 'norm')
fit = fitdist(ret, 'norm')
plot(fit)
library(fGarch)
basicStats(ret)
fit = fitdist(ret, 'norm')
fit
library(gamlss)
library(gamlss.dist)
library(gamlss.add)
library(sn)
fit <- fitDist(x, k = 2, type = "sn", trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, k = 2, type = "sn", trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, type = "sn", trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, type = "norm", trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, trace = FALSE, try.gamlss = TRUE)
fit
fit = fitDist(ret, type='realline' trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, type='realline', trace = FALSE, try.gamlss = TRUE)
fit
fit = fitDist(ret, type='realplus', trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, k=2, type='realplus', trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, k=2, type='realline', trace = FALSE, try.gamlss = TRUE)
fit = fitDist(ret, k=2, type='realline', trace = T, try.gamlss = TRUE)
fit = fitDist(ret, k=2, type='realline', trace = F, try.gamlss = F)
setwd("D:/Git projects/ML in R")
df = read.csv('credit.csv')
df$clientid = NULL
attach(df)
# drop na values
m_age = mean(age[age>0 ], na.rm = T)  # average without considering negative values
df$age = ifelse(df$age < 0 |is.na(df$age) , m_age, df$age)
# scaling data
df[, 1:3] = scale(df[, 1:3])
# Encode class
df$default = factor(df$default, levels = c(0,1))
library(rpart)
library(rpart.plot)
library(fBasics)
library(caTools)  # split data
library(caret)    #provide metrics for confusion matrix
pca = preProcess(x= df[-4], method = 'pca', pcaComp = 1)
correlationTest(df[-4], pca)
correlationTest(df[,-4], pca)
correlationTest(df$income, pca)
View(pca)
pca[["pcaComp"]]
pca[["mean"]]
pca[["method"]]
pca = predict(pca, df[-4])
View(pca)
correlationTest(df[-4], pca)
correlationTest(df[,-4], pca)
correlationTest(df$income, pca)
correlationTest(df$income, pca)
correlationTest(df)
correlation(df)
install.packages('correlation')
correlation(df)
library('correlation')
correlation(df)
correlation(df, pca)
df$pca = pca
View(df)
correlation(df)
correlation(df)
View(pca)
View(df)
df[ ,4] = pca
View(df)
df = read.csv('credit.csv')
df$clientid = NULL
# drop na values
m_age = mean(age[age>0 ], na.rm = T)  # average without considering negative values
df$age = ifelse(df$age < 0 |is.na(df$age) , m_age, df$age)
# scaling data
df[, 1:3] = scale(df[, 1:3])
# Encode class
df$default = factor(df$default, levels = c(0,1))
#--------- PCA
pca = preProcess(x= df[-4], method = 'pca', pcaComp = 1)
pca = predict(pca, df[-4])
df$pca = pca
View(df)
df2 = df[ , c(1,2,3,5,4)]
View(df2)
correlation(df)
correlation(df[,1:4])
correlation(df[,1:5])
correlation(df, df)
correlation(df)
correlation(c(df))
correlation(df)
correlation(df$income, pca, df$age)
install.packages('MatrixCorrelations')
library('MatrixCorrelations')
correlation(df$income, pca, df$age)
correlation(df$income,pca)
correlation(df)
correlation(df[,2:4])
correlation(df[,3:4])
correlation(df[ ,1:4])
correlation(df2)
correlation(df2[,1:4])
View(df2)
correlation(df2[ ,1:4])
correlation(df2[ ,1:4], pca)
correlation(df2, pca)
